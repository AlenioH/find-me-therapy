// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id            Int      @id @default(autoincrement())
  email         String   @unique
  passwordHash  String
  name          String
  phone         String?  // Optional, as clients may not always provide a phone number
  role          String   // 'therapist' or 'client'
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  clients       clients?
  therapist     therapists?
}

model clients {
  id          Int      @id @default(autoincrement())
  user        users    @relation(fields: [userId], references: [id])
  userId      Int      @unique // foreign Key (Users.id), UNIQUE
  preferences Json?
}

model therapists {
  id                      Int       @id @default(autoincrement())
  userId                  Int       @unique // foreign Key (Users.id), UNIQUE
  user                    users     @relation(fields: [userId], references: [id])
  gender                  Gender   // ENUM('male', 'female', 'non-binary', 'prefer not to say')
  bio                     String
  address                 String
  languages               String[]
  specialization          String[]
  costPerSession          Decimal   @db.Decimal(10, 2)
  sessionDuration         Int
  offersFirstConsultation Boolean   @default(false)
  lgbtqFriendly           Boolean   @default(false)
  profilePicture          String?
  profileVideo            String?
  qualificationsPdf       String
  birthdate               DateTime
  adminApprovals  adminApprovals[]
}

model adminApprovals {
  id            Int       @id @default(autoincrement())
  therapistId   Int       // Foreign key referencing therapists.id
  therapist     therapists @relation(fields: [therapistId], references: [id])
  type          ApprovalType
  status        ApprovalStatus @default(pending)
  adminNotes    String?
  createdAt     DateTime  @default(now())

  @@map("admin_approvals")
}

enum ApprovalType {
  new_profile
  update
}

enum ApprovalStatus {
  pending
  approved
  rejected
}

enum Gender {
  male
  female
  non_binary
  prefer_not_to_say
}

//TODO: languages, specialization enums